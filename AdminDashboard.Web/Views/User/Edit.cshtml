@model AdminDashboard.Application.DTOs.UpdateUserDto
@{
    ViewData["Title"] = "Edit User";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="page-header">
    <h1 class="page-title">
        <i class="fas fa-user-edit me-2"></i>Edit User
    </h1>
    <a asp-action="Index" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left me-2"></i>Back to List
    </a>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="content-card">
            <div class="card-body">
                <form asp-action="Edit" method="post" id="editUserForm">
                    <input type="hidden" name="UserId" value="@Model.UserId" />
                    
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Username</label>
                            <input type="text" class="form-control" name="Username" value="@Model.Username" required />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Full Name</label>
                            <input type="text" class="form-control" name="FullName" value="@Model.FullName" required />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Email</label>
                            <input type="email" class="form-control" name="Email" value="@Model.Email" required />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Password <small class="text-muted">(leave blank to keep current)</small></label>
                            <input type="password" class="form-control" name="Password" placeholder="Enter new password or leave blank" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Role</label>
                            <select class="form-select" name="RoleId" required>
                                <option value="">Select Role</option>
                                <option value="1" selected="@(Model.RoleId == 1)">Admin</option>
                                <option value="2" selected="@(Model.RoleId == 2)">Maker</option>
                                <option value="3" selected="@(Model.RoleId == 3)">Checker</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Status</label>
                            <div class="form-check form-switch mt-2">
                                <input class="form-check-input" type="checkbox" name="IsActive" @(Model.IsActive ? "checked" : "") />
                                <label class="form-check-label">Active</label>
                            </div>
                        </div>
                    </div>

                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>User ID:</strong> @Model.UserId
                    </div>

                    <div class="mt-4">
                        <button type="button" class="btn btn-primary" onclick="confirmUpdate()">
                            <i class="fas fa-save me-2"></i>Update User
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-times me-2"></i>Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0"><i class="fas fa-info-circle me-2"></i>Information</h5>
            </div>
            <div class="card-body">
                <p><strong>Current Status:</strong></p>
                @if (Model.IsActive)
                {
                    <span class="badge bg-success mb-3"><i class="fas fa-check-circle me-1"></i>Active</span>
                }
                else
                {
                    <span class="badge bg-danger mb-3"><i class="fas fa-times-circle me-1"></i>Inactive</span>
                }
                
                <hr>
                
                <p class="small mb-2">
                    <i class="fas fa-user me-2 text-primary"></i><strong>Username:</strong> @Model.Username
                </p>
                <p class="small mb-2">
                    <i class="fas fa-envelope me-2 text-primary"></i><strong>Email:</strong> @Model.Email
                </p>
                <p class="small mb-2">
                    <i class="fas fa-user-tag me-2 text-primary"></i><strong>Role:</strong> 
                    <span class="badge bg-info">@ViewBag.UserRoleName</span>
                </p>
                
                @if (ViewBag.CurrentUserRole == "Maker")
                {
                    <hr>
                    <div class="alert alert-warning small mb-0">
                        <i class="fas fa-exclamation-triangle me-1"></i>
                        <strong>Note:</strong> As a Maker, your changes will require approval from a Checker.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function confirmUpdate() {
            Swal.fire({
                title: 'Update User?',
                html: 'Are you sure you want to update this user?<br><small class="text-muted">Changes will be @(ViewBag.CurrentUserRole == "Maker" ? "submitted for approval" : "applied immediately")</small>',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#007bff',
                cancelButtonColor: '#6c757d',
                confirmButtonText: '<i class="fas fa-save me-2"></i>Yes, update it!',
                cancelButtonText: '<i class="fas fa-times me-2"></i>Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Processing...',
                        text: 'Updating user information',
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });
                    document.getElementById('editUserForm').submit();
                }
            });
        }

        // Show validation errors if any
        @if (!ViewData.ModelState.IsValid)
        {
            <text>
            Swal.fire({
                icon: 'error',
                title: 'Validation Error',
                html: '@Html.ValidationSummary(false)',
                confirmButtonColor: '#dc3545'
            });
            </text>
        }
    </script>
}
